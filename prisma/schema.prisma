// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_MONGODB")
}

model Guest {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  id_internal      String    @unique
  chat_text        String?
  date_text        String?
  name             String?
  document         String?
  name_partner     String?
  document_partner String?
  checkin_date     DateTime?
  checkout_date    DateTime?
  email_flat_sent  Boolean   @default(false)
  guest_canceled   Boolean   @default(false)
  flat_id          Int       @default(1201)
  price            Float?
  updatedAt        DateTime  @default(now())
  guestUseCar      Boolean?  @default(false)
  carLicense       String?
}

model OpenAIUsage {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime @default(now())
  completionTokens BigInt
  promptTokens     BigInt
  totalTokens      BigInt
}

model LastUpdate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  release     String
  machineName String
  updatedAt   DateTime @default(now())
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
